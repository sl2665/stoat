#!/bin/bash

if [ $# -lt 2 ]; then
	echo -e "Usage:\t bgmatrix.sh [options] -a <bed> -b <bedgraph>"
	echo -e "Options:"
	echo -e "\t-bin\tbin size (default=10)"
	echo -e "\t-split\tTreat BED12 entries as distinct BED intervals."
	exit
fi

SPLIT=false
BIN=10

while [[ $# -ge 1 ]]; do
	key="$1"
	case $key in
		-a)
		BED="$2"
		shift
		;;
		-b)
		BG="$2"
		shift
		;;
		-bin)
		BIN="$2"
		shift
		;;
		-split)
		SPLIT=true
		;;
		--default)
		;;
		*)
		;;
	esac
	shift
done

BEDCOL="$(head -1 $BED | awk '{print NF}')"

if [ $BEDCOL -eq 12 ]; then
	if $SPLIT; then
		bedtools map -a $BED -b $BG -c 2,4 -o collapse -sorted -split -nobuf -delim "," > _tmp_bgmat.txt
		cat _tmp_bgmat.txt | \
			awk -v bin=$BIN ' 
			BEGIN {
				bin=0+bin;
			}
			{
				start=0+$2;
				split($12,exs,",");
				split($11,exb,",");
				nex=0+$10;
				exsum = 0;
				for(j=1;j<=nex;++j) exsum+=exb[j];
				N=int(exsum/bin)+1;
				exs[nex+1]=999999999;
				prev=0;
				v=0;
				curexs=exs[1];
				nextexs=exs[2];
				curexi=1;
				exsum=0;
				if($13!=".") {
				  n=split($13, pos, ",");
				  n=split($14, cts, ",");
				  for(i=1;i<=n;i++) {
					  rp=pos[i]-start+1;
					  if(rp<=0) continue;
					  while(rp>=nextexs) { curexs=nextexs; exsum+=exb[curexi];
					  	++curexi; nextexs=exs[curexi+1]; }
					  idx=int((rp-curexs+exsum)/bin);
					  if(idx>N) break;
					  if(idx!=prev) {
						  printf v"\t";
						  if(idx>prev+1) for(j=prev;j<idx-1;++j) printf "0\t";
						  prev=idx;
						  v=0;
					  }
					  v+=cts[i];
					}
				}
				printf v;
				for(j=prev+1;j<N;++j) printf "\t0";
				printf "\n";
			}'
		rm _tmp_bgmat.txt
	else
		bedtools map -a $BED -b $BG -c 2,4 -o collapse -sorted -nobuf -delim " " | \
			awk -v bin=$BIN ' 
			BEGIN {
				bin=0+bin;
			}
			{
				start=0+$2;
				N=int(($3-start)/bin)+1;
				n=(NF-12)/2;
				prev=0;
				v=0;
				if($13!=".") for(i=13;i<13+n;++i) {
					idx=int(($i-start)/bin);
					if(idx!=prev) {
						printf v"\t";
						if(idx>prev+1) for(j=prev;j<idx-1;++j) printf "0\t";
						prev=idx;
						v=0;
					}
					v+=$(i+n);
				}
				printf v;
				for(j=prev+1;j<N;++j) printf "\t0";
				printf "\n";
			}'
	fi
else
	bedtools map -a $BED -b $BG -c 2,3,4 -o collapse -sorted -nobuf -delim " " | \
		awk -v bc=$BEDCOL -v bin=$BIN ' 
		BEGIN {
			bin=0+bin;
		}
		{
			start=0+$2;
			end=0+$3;
			N=int((end-start)/bin)+1;
			n=(NF-bc)/3;
			prev=0;
			v=0;
			if($(bc+1)!=".") for(i=bc+1;i<=bc+n;++i) {
				s = $i;
				e = $(i+n);
				for(j=s; j<e; ++j) {
					if(j>=start && j<=end) {
						idx = int((j-start)/bin);
						if(idx != prev) {
							if(idx > prev+1) for(k=prev;k<idx-1;++k) printf "0\t";
							printf v"\t";
							prev=idx;
							v=0;
						}
						v += $(i+n+n);
					}
				}
			}
			printf v;
			for(j=prev+1;j<N;++j) printf "\t0";
			printf "\n";
		}'
fi

