#!/bin/bash
# Generates a dynamic gene expression table (dge)

if [ $# -lt 2 ]; then
	echo -e "Usage:\tstoat-getdge -pro <proseq-getexpr file> -ted <tedseq-getexpr file> -pal <tedseq-makepal file>"
	echo -e "Options:"
    echo -e "\t-win\tPAL window (default = 500)"
    echo -e "\t-ins\tPAL insert size (default = 250)"
	echo -e "\t-max\tPAL max length (default = 250)"
	exit
fi

WIN=500
INS=250
MAX=250
while [[ $# -ge 1 ]]; do
	key="$1"
	case $key in
		-pro)
		PRO="$2"
		shift
		;;
		-ted)
		TED="$2"
		shift
		;;
		-pal)
		PAL="$2"
		shift
		;;
		-win)
		WIN="$2"
		shift
		;;
		-ins)
		INS="$2"
		shift
		;;
		-max)
		MAX="$2"
		shift
		;;
		--default)
		;;
		*)
		;;
	esac
	shift
done

if [ ! -d _stoat_tmp ]; then
	mkdir _stoat_tmp
fi

awk -v win=${WIN} -v ins=$INS -v max=$MAX '{
	count=0;sum=0;
	for(i=win-ins;i<=NF-1&&i<=max+(win-ins);++i) {
		pos=i-(win-ins);count+=$(i+1);sum+=pos*$(i+1);}
	if(count==0) print $1"\tNA"; else print $1"\t"sum/count;}' \
	$PAL > _stoat_tmp/_pal_meanpos.txt

awk 'BEGIN{print "id\tPromoter\tGeneBody\tExpression\tPAL";}
	FNR==1{++fid}
	fid==1&&FNR>1{pp[$1]=$5;gb[$1]=$6;ex[$1]=$7;next}
	fid==2{pl[$1]=$2;next}
	fid==3&&FNR>1{print $1"\t"pp[$1]"\t"gb[$1]"\t"$3"\t"pl[$1]}' \
	$PRO _stoat_tmp/_pal_meanpos.txt $TED

rm -rf _stoat_tmp
